(declare-datatypes ((_enum_0 0)) (((NULL) (A2) (B1) (C1))))
(declare-datatypes ((_tuple_1 0)) (((_tuple_1 (__f1 Int) (__f2 Int)))))
(declare-datatypes ((_tuple_0 0)) (((_tuple_0 (__f1 _enum_0) (__f2 _tuple_1)))))
(declare-datatypes ((_tuple_2 0)) (((_tuple_2 (__f1 _tuple_0) (__f2 _tuple_0) (__f3 _tuple_0) (__f4 _tuple_0) (__f5 _tuple_0) (__f6 _tuple_0) (__f7 _tuple_0) (__f8 _tuple_0) (__f9 _tuple_0) (__f10 _tuple_0)))))
(declare-fun initial_2_trace_C () _tuple_2)
(declare-fun initial_3_trace_B () _tuple_2)
(declare-fun initial_1_trace_A () _tuple_2)
(assert (forall ((i Int) (j Int))
  (! (let ((a!1 (ite (= i 8)
                     (__f9 initial_2_trace_C)
                     (ite (= i 9)
                          (__f10 initial_2_trace_C)
                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1))))))
           (a!5 (ite (= j 8)
                     (__f9 initial_2_trace_C)
                     (ite (= j 9)
                          (__f10 initial_2_trace_C)
                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1)))))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_2_trace_C)
                     (ite (= i 6)
                          (__f7 initial_2_trace_C)
                          (ite (= i 7) (__f8 initial_2_trace_C) a!1))))
           (a!6 (ite (= j 5)
                     (__f6 initial_2_trace_C)
                     (ite (= j 6)
                          (__f7 initial_2_trace_C)
                          (ite (= j 7) (__f8 initial_2_trace_C) a!5)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_2_trace_C)
                     (ite (= i 3)
                          (__f4 initial_2_trace_C)
                          (ite (= i 4) (__f5 initial_2_trace_C) a!2))))
           (a!7 (ite (= j 2)
                     (__f3 initial_2_trace_C)
                     (ite (= j 3)
                          (__f4 initial_2_trace_C)
                          (ite (= j 4) (__f5 initial_2_trace_C) a!6)))))
     (let ((a!4 (ite (= i 0)
                     (__f1 initial_2_trace_C)
                     (ite (= i 1) (__f2 initial_2_trace_C) a!3)))
           (a!8 (ite (= j 0)
                     (__f1 initial_2_trace_C)
                     (ite (= j 1) (__f2 initial_2_trace_C) a!7))))
       (or (not (and (>= i 0) (<= i 9) (>= j 0) (<= j 9)))
           (not (= (__f1 a!4) (__f1 a!8)))
           (not (= (__f2 a!4) (__f2 a!8)))
           (= i j))))))
     :skolemid _skolem_0
     :qid _forall_0)))
(assert (forall ((i Int))
  (! (let ((a!1 (ite (= i 8)
                     (__f9 initial_3_trace_B)
                     (ite (= i 9)
                          (__f10 initial_3_trace_B)
                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1)))))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_3_trace_B)
                     (ite (= i 6)
                          (__f7 initial_3_trace_B)
                          (ite (= i 7) (__f8 initial_3_trace_B) a!1)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_3_trace_B)
                     (ite (= i 3)
                          (__f4 initial_3_trace_B)
                          (ite (= i 4) (__f5 initial_3_trace_B) a!2)))))
     (let ((a!4 (__f2 (ite (= i 0)
                           (__f1 initial_3_trace_B)
                           (ite (= i 1) (__f2 initial_3_trace_B) a!3)))))
       (or (not (and (>= i 0) (<= i 9)))
           (and (>= (__f1 a!4) 0) (>= (__f2 a!4) 0)))))))
     :skolemid _skolem_1
     :qid _forall_1)))
(assert (forall ((k Int))
  (! (let ((a!1 (ite (= k 8)
                     (__f9 initial_2_trace_C)
                     (ite (= k 9)
                          (__f10 initial_2_trace_C)
                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1)))))))
     (let ((a!2 (ite (= k 5)
                     (__f6 initial_2_trace_C)
                     (ite (= k 6)
                          (__f7 initial_2_trace_C)
                          (ite (= k 7) (__f8 initial_2_trace_C) a!1)))))
     (let ((a!3 (ite (= k 2)
                     (__f3 initial_2_trace_C)
                     (ite (= k 3)
                          (__f4 initial_2_trace_C)
                          (ite (= k 4) (__f5 initial_2_trace_C) a!2)))))
     (let ((a!4 (__f1 (ite (= k 0)
                           (__f1 initial_2_trace_C)
                           (ite (= k 1) (__f2 initial_2_trace_C) a!3)))))
       (or (not (and (>= k 0) (<= k 9))) (= a!4 C1))))))
     :skolemid _skolem_2
     :qid _forall_2)))
(assert (forall ((i Int))
  (! (let ((a!1 (ite (= i 8)
                     (__f9 initial_1_trace_A)
                     (ite (= i 9)
                          (__f10 initial_1_trace_A)
                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1)))))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_1_trace_A)
                     (ite (= i 6)
                          (__f7 initial_1_trace_A)
                          (ite (= i 7) (__f8 initial_1_trace_A) a!1)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_1_trace_A)
                     (ite (= i 3)
                          (__f4 initial_1_trace_A)
                          (ite (= i 4) (__f5 initial_1_trace_A) a!2)))))
     (let ((a!4 (__f2 (ite (= i 0)
                           (__f1 initial_1_trace_A)
                           (ite (= i 1) (__f2 initial_1_trace_A) a!3)))))
       (or (not (and (>= i 0) (<= i 9)))
           (and (>= (__f1 a!4) 0) (>= (__f2 a!4) 0)))))))
     :skolemid _skolem_3
     :qid _forall_3)))
(assert (forall ((i Int))
  (! (let ((a!1 (ite (= i 8)
                     (__f9 initial_1_trace_A)
                     (ite (= i 9)
                          (__f10 initial_1_trace_A)
                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1))))))
           (a!5 (exists ((j Int))
                  (! (let ((a!1 (ite (= j 8)
                                     (__f9 initial_3_trace_B)
                                     (ite (= j 9)
                                          (__f10 initial_3_trace_B)
                                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1))))))
                           (a!5 (ite (= i 8)
                                     (__f9 initial_1_trace_A)
                                     (ite (= i 9)
                                          (__f10 initial_1_trace_A)
                                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1)))))))
                     (let ((a!2 (ite (= j 5)
                                     (__f6 initial_3_trace_B)
                                     (ite (= j 6)
                                          (__f7 initial_3_trace_B)
                                          (ite (= j 7)
                                               (__f8 initial_3_trace_B)
                                               a!1))))
                           (a!6 (ite (= i 5)
                                     (__f6 initial_1_trace_A)
                                     (ite (= i 6)
                                          (__f7 initial_1_trace_A)
                                          (ite (= i 7)
                                               (__f8 initial_1_trace_A)
                                               a!5)))))
                     (let ((a!3 (ite (= j 2)
                                     (__f3 initial_3_trace_B)
                                     (ite (= j 3)
                                          (__f4 initial_3_trace_B)
                                          (ite (= j 4)
                                               (__f5 initial_3_trace_B)
                                               a!2))))
                           (a!7 (ite (= i 2)
                                     (__f3 initial_1_trace_A)
                                     (ite (= i 3)
                                          (__f4 initial_1_trace_A)
                                          (ite (= i 4)
                                               (__f5 initial_1_trace_A)
                                               a!6)))))
                     (let ((a!4 (ite (= j 0)
                                     (__f1 initial_3_trace_B)
                                     (ite (= j 1) (__f2 initial_3_trace_B) a!3)))
                           (a!8 (__f2 (ite (= i 0)
                                           (__f1 initial_1_trace_A)
                                           (ite (= i 1)
                                                (__f2 initial_1_trace_A)
                                                a!7)))))
                       (and (= (__f1 a!4) B1)
                            (= (__f2 a!4) (_tuple_1 (__f1 a!8) (__f2 a!8))))))))
                     :skolemid _skolem_4
                     :qid _exists_0))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_1_trace_A)
                     (ite (= i 6)
                          (__f7 initial_1_trace_A)
                          (ite (= i 7) (__f8 initial_1_trace_A) a!1)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_1_trace_A)
                     (ite (= i 3)
                          (__f4 initial_1_trace_A)
                          (ite (= i 4) (__f5 initial_1_trace_A) a!2)))))
     (let ((a!4 (__f1 (ite (= i 0)
                           (__f1 initial_1_trace_A)
                           (ite (= i 1) (__f2 initial_1_trace_A) a!3)))))
       (or (not (= a!4 A2)) a!5)))))
     :skolemid _skolem_5
     :qid _forall_4)))
(assert (forall ((i Int) (j Int))
  (! (let ((a!1 (ite (= i 8)
                     (__f9 initial_3_trace_B)
                     (ite (= i 9)
                          (__f10 initial_3_trace_B)
                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1))))))
           (a!5 (ite (= j 8)
                     (__f9 initial_3_trace_B)
                     (ite (= j 9)
                          (__f10 initial_3_trace_B)
                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1)))))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_3_trace_B)
                     (ite (= i 6)
                          (__f7 initial_3_trace_B)
                          (ite (= i 7) (__f8 initial_3_trace_B) a!1))))
           (a!6 (ite (= j 5)
                     (__f6 initial_3_trace_B)
                     (ite (= j 6)
                          (__f7 initial_3_trace_B)
                          (ite (= j 7) (__f8 initial_3_trace_B) a!5)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_3_trace_B)
                     (ite (= i 3)
                          (__f4 initial_3_trace_B)
                          (ite (= i 4) (__f5 initial_3_trace_B) a!2))))
           (a!7 (ite (= j 2)
                     (__f3 initial_3_trace_B)
                     (ite (= j 3)
                          (__f4 initial_3_trace_B)
                          (ite (= j 4) (__f5 initial_3_trace_B) a!6)))))
     (let ((a!4 (ite (= i 0)
                     (__f1 initial_3_trace_B)
                     (ite (= i 1) (__f2 initial_3_trace_B) a!3)))
           (a!8 (ite (= j 0)
                     (__f1 initial_3_trace_B)
                     (ite (= j 1) (__f2 initial_3_trace_B) a!7))))
       (or (not (and (>= i 0) (<= i 9) (>= j 0) (<= j 9)))
           (= i j)
           (not (= (__f1 a!4) (__f1 a!8)))
           (not (= (__f2 a!4) (__f2 a!8))))))))
     :skolemid _skolem_6
     :qid _forall_5)))
(assert (forall ((i Int) (j Int))
  (! (let ((a!1 (ite (= i 8)
                     (__f9 initial_1_trace_A)
                     (ite (= i 9)
                          (__f10 initial_1_trace_A)
                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1))))))
           (a!5 (ite (= j 8)
                     (__f9 initial_1_trace_A)
                     (ite (= j 9)
                          (__f10 initial_1_trace_A)
                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1)))))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_1_trace_A)
                     (ite (= i 6)
                          (__f7 initial_1_trace_A)
                          (ite (= i 7) (__f8 initial_1_trace_A) a!1))))
           (a!6 (ite (= j 5)
                     (__f6 initial_1_trace_A)
                     (ite (= j 6)
                          (__f7 initial_1_trace_A)
                          (ite (= j 7) (__f8 initial_1_trace_A) a!5)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_1_trace_A)
                     (ite (= i 3)
                          (__f4 initial_1_trace_A)
                          (ite (= i 4) (__f5 initial_1_trace_A) a!2))))
           (a!7 (ite (= j 2)
                     (__f3 initial_1_trace_A)
                     (ite (= j 3)
                          (__f4 initial_1_trace_A)
                          (ite (= j 4) (__f5 initial_1_trace_A) a!6)))))
     (let ((a!4 (ite (= i 0)
                     (__f1 initial_1_trace_A)
                     (ite (= i 1) (__f2 initial_1_trace_A) a!3)))
           (a!8 (ite (= j 0)
                     (__f1 initial_1_trace_A)
                     (ite (= j 1) (__f2 initial_1_trace_A) a!7))))
       (or (not (and (>= i 0) (<= i 9) (>= j 0) (<= j 9)))
           (= i j)
           (not (= (__f1 a!4) (__f1 a!8)))
           (not (= (__f2 a!4) (__f2 a!8))))))))
     :skolemid _skolem_7
     :qid _forall_6)))
(assert (forall ((i Int))
  (! (let ((a!1 (ite (= i 8)
                     (__f9 initial_1_trace_A)
                     (ite (= i 9)
                          (__f10 initial_1_trace_A)
                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1)))))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_1_trace_A)
                     (ite (= i 6)
                          (__f7 initial_1_trace_A)
                          (ite (= i 7) (__f8 initial_1_trace_A) a!1)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_1_trace_A)
                     (ite (= i 3)
                          (__f4 initial_1_trace_A)
                          (ite (= i 4) (__f5 initial_1_trace_A) a!2)))))
     (let ((a!4 (__f1 (ite (= i 0)
                           (__f1 initial_1_trace_A)
                           (ite (= i 1) (__f2 initial_1_trace_A) a!3)))))
       (or (not (and (>= i 0) (<= i 9))) (= a!4 A2))))))
     :skolemid _skolem_8
     :qid _forall_7)))
(assert (forall ((i Int))
  (! (let ((a!1 (ite (= i 8)
                     (__f9 initial_2_trace_C)
                     (ite (= i 9)
                          (__f10 initial_2_trace_C)
                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1)))))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_2_trace_C)
                     (ite (= i 6)
                          (__f7 initial_2_trace_C)
                          (ite (= i 7) (__f8 initial_2_trace_C) a!1)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_2_trace_C)
                     (ite (= i 3)
                          (__f4 initial_2_trace_C)
                          (ite (= i 4) (__f5 initial_2_trace_C) a!2)))))
     (let ((a!4 (__f2 (ite (= i 0)
                           (__f1 initial_2_trace_C)
                           (ite (= i 1) (__f2 initial_2_trace_C) a!3)))))
       (or (not (and (>= i 0) (<= i 9)))
           (and (>= (__f1 a!4) 0) (>= (__f2 a!4) 0)))))))
     :skolemid _skolem_9
     :qid _forall_8)))
(assert (forall ((i Int))
  (! (let ((a!1 (ite (= i 8)
                     (__f9 initial_3_trace_B)
                     (ite (= i 9)
                          (__f10 initial_3_trace_B)
                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1))))))
           (a!5 (exists ((j Int))
                  (! (let ((a!1 (ite (= j 8)
                                     (__f9 initial_2_trace_C)
                                     (ite (= j 9)
                                          (__f10 initial_2_trace_C)
                                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1))))))
                           (a!5 (ite (= i 8)
                                     (__f9 initial_3_trace_B)
                                     (ite (= i 9)
                                          (__f10 initial_3_trace_B)
                                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1)))))))
                     (let ((a!2 (ite (= j 5)
                                     (__f6 initial_2_trace_C)
                                     (ite (= j 6)
                                          (__f7 initial_2_trace_C)
                                          (ite (= j 7)
                                               (__f8 initial_2_trace_C)
                                               a!1))))
                           (a!6 (ite (= i 5)
                                     (__f6 initial_3_trace_B)
                                     (ite (= i 6)
                                          (__f7 initial_3_trace_B)
                                          (ite (= i 7)
                                               (__f8 initial_3_trace_B)
                                               a!5)))))
                     (let ((a!3 (ite (= j 2)
                                     (__f3 initial_2_trace_C)
                                     (ite (= j 3)
                                          (__f4 initial_2_trace_C)
                                          (ite (= j 4)
                                               (__f5 initial_2_trace_C)
                                               a!2))))
                           (a!7 (ite (= i 2)
                                     (__f3 initial_3_trace_B)
                                     (ite (= i 3)
                                          (__f4 initial_3_trace_B)
                                          (ite (= i 4)
                                               (__f5 initial_3_trace_B)
                                               a!6)))))
                     (let ((a!4 (ite (= j 0)
                                     (__f1 initial_2_trace_C)
                                     (ite (= j 1) (__f2 initial_2_trace_C) a!3)))
                           (a!8 (__f2 (ite (= i 0)
                                           (__f1 initial_3_trace_B)
                                           (ite (= i 1)
                                                (__f2 initial_3_trace_B)
                                                a!7)))))
                       (and (= (__f1 a!4) C1)
                            (= (__f2 a!4) (_tuple_1 (__f1 a!8) (__f2 a!8))))))))
                     :skolemid _skolem_10
                     :qid _exists_1))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_3_trace_B)
                     (ite (= i 6)
                          (__f7 initial_3_trace_B)
                          (ite (= i 7) (__f8 initial_3_trace_B) a!1)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_3_trace_B)
                     (ite (= i 3)
                          (__f4 initial_3_trace_B)
                          (ite (= i 4) (__f5 initial_3_trace_B) a!2)))))
     (let ((a!4 (__f1 (ite (= i 0)
                           (__f1 initial_3_trace_B)
                           (ite (= i 1) (__f2 initial_3_trace_B) a!3)))))
       (or (not (= a!4 B1)) a!5)))))
     :skolemid _skolem_11
     :qid _forall_9)))
(assert (forall ((i Int) (j Int))
  (! (let ((a!1 (ite (= i 8)
                     (__f9 initial_2_trace_C)
                     (ite (= i 9)
                          (__f10 initial_2_trace_C)
                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1))))))
           (a!5 (ite (= j 8)
                     (__f9 initial_2_trace_C)
                     (ite (= j 9)
                          (__f10 initial_2_trace_C)
                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1))))))
           (a!9 (not (and (not (<= j i)) (>= i 0) (<= i 9) (>= j 0) (<= j 9)))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_2_trace_C)
                     (ite (= i 6)
                          (__f7 initial_2_trace_C)
                          (ite (= i 7) (__f8 initial_2_trace_C) a!1))))
           (a!6 (ite (= j 5)
                     (__f6 initial_2_trace_C)
                     (ite (= j 6)
                          (__f7 initial_2_trace_C)
                          (ite (= j 7) (__f8 initial_2_trace_C) a!5)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_2_trace_C)
                     (ite (= i 3)
                          (__f4 initial_2_trace_C)
                          (ite (= i 4) (__f5 initial_2_trace_C) a!2))))
           (a!7 (ite (= j 2)
                     (__f3 initial_2_trace_C)
                     (ite (= j 3)
                          (__f4 initial_2_trace_C)
                          (ite (= j 4) (__f5 initial_2_trace_C) a!6)))))
     (let ((a!4 (__f2 (ite (= i 0)
                           (__f1 initial_2_trace_C)
                           (ite (= i 1) (__f2 initial_2_trace_C) a!3))))
           (a!8 (__f2 (ite (= j 0)
                           (__f1 initial_2_trace_C)
                           (ite (= j 1) (__f2 initial_2_trace_C) a!7)))))
     (let ((a!10 (and (= (__f1 a!4) (__f1 a!8))
                      (not (<= (__f2 a!4) (__f2 a!8))))))
     (let ((a!11 (or (not (<= (__f1 a!4) (__f1 a!8))) a!10)))
       (or (= a!4 a!8) a!9 (and (not a!11) (not (= a!4 a!8))))))))))
     :skolemid _skolem_12
     :qid _forall_10)))
(assert (forall ((j Int))
  (! (let ((a!1 (ite (= j 8)
                     (__f9 initial_3_trace_B)
                     (ite (= j 9)
                          (__f10 initial_3_trace_B)
                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1)))))))
     (let ((a!2 (ite (= j 5)
                     (__f6 initial_3_trace_B)
                     (ite (= j 6)
                          (__f7 initial_3_trace_B)
                          (ite (= j 7) (__f8 initial_3_trace_B) a!1)))))
     (let ((a!3 (ite (= j 2)
                     (__f3 initial_3_trace_B)
                     (ite (= j 3)
                          (__f4 initial_3_trace_B)
                          (ite (= j 4) (__f5 initial_3_trace_B) a!2)))))
     (let ((a!4 (__f1 (ite (= j 0)
                           (__f1 initial_3_trace_B)
                           (ite (= j 1) (__f2 initial_3_trace_B) a!3)))))
       (or (not (and (>= j 0) (<= j 9))) (= a!4 B1))))))
     :skolemid _skolem_13
     :qid _forall_11)))
(assert (forall ((i Int) (j Int))
  (! (let ((a!1 (ite (= i 8)
                     (__f9 initial_3_trace_B)
                     (ite (= i 9)
                          (__f10 initial_3_trace_B)
                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1))))))
           (a!5 (ite (= j 8)
                     (__f9 initial_3_trace_B)
                     (ite (= j 9)
                          (__f10 initial_3_trace_B)
                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1))))))
           (a!9 (not (and (not (<= j i)) (>= i 0) (<= i 9) (>= j 0) (<= j 9)))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_3_trace_B)
                     (ite (= i 6)
                          (__f7 initial_3_trace_B)
                          (ite (= i 7) (__f8 initial_3_trace_B) a!1))))
           (a!6 (ite (= j 5)
                     (__f6 initial_3_trace_B)
                     (ite (= j 6)
                          (__f7 initial_3_trace_B)
                          (ite (= j 7) (__f8 initial_3_trace_B) a!5)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_3_trace_B)
                     (ite (= i 3)
                          (__f4 initial_3_trace_B)
                          (ite (= i 4) (__f5 initial_3_trace_B) a!2))))
           (a!7 (ite (= j 2)
                     (__f3 initial_3_trace_B)
                     (ite (= j 3)
                          (__f4 initial_3_trace_B)
                          (ite (= j 4) (__f5 initial_3_trace_B) a!6)))))
     (let ((a!4 (__f2 (ite (= i 0)
                           (__f1 initial_3_trace_B)
                           (ite (= i 1) (__f2 initial_3_trace_B) a!3))))
           (a!8 (__f2 (ite (= j 0)
                           (__f1 initial_3_trace_B)
                           (ite (= j 1) (__f2 initial_3_trace_B) a!7)))))
     (let ((a!10 (and (= (__f1 a!4) (__f1 a!8))
                      (not (<= (__f2 a!4) (__f2 a!8))))))
     (let ((a!11 (or (not (<= (__f1 a!4) (__f1 a!8))) a!10)))
       (or (= a!4 a!8) a!9 (and (not a!11) (not (= a!4 a!8))))))))))
     :skolemid _skolem_14
     :qid _forall_12)))
(assert (forall ((i Int) (j Int))
  (! (let ((a!1 (ite (= i 8)
                     (__f9 initial_1_trace_A)
                     (ite (= i 9)
                          (__f10 initial_1_trace_A)
                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1))))))
           (a!5 (ite (= j 8)
                     (__f9 initial_1_trace_A)
                     (ite (= j 9)
                          (__f10 initial_1_trace_A)
                          (_tuple_0 NULL (_tuple_1 (- 1) (- 1))))))
           (a!9 (not (and (not (<= j i)) (>= i 0) (<= i 9) (>= j 0) (<= j 9)))))
     (let ((a!2 (ite (= i 5)
                     (__f6 initial_1_trace_A)
                     (ite (= i 6)
                          (__f7 initial_1_trace_A)
                          (ite (= i 7) (__f8 initial_1_trace_A) a!1))))
           (a!6 (ite (= j 5)
                     (__f6 initial_1_trace_A)
                     (ite (= j 6)
                          (__f7 initial_1_trace_A)
                          (ite (= j 7) (__f8 initial_1_trace_A) a!5)))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_1_trace_A)
                     (ite (= i 3)
                          (__f4 initial_1_trace_A)
                          (ite (= i 4) (__f5 initial_1_trace_A) a!2))))
           (a!7 (ite (= j 2)
                     (__f3 initial_1_trace_A)
                     (ite (= j 3)
                          (__f4 initial_1_trace_A)
                          (ite (= j 4) (__f5 initial_1_trace_A) a!6)))))
     (let ((a!4 (__f2 (ite (= i 0)
                           (__f1 initial_1_trace_A)
                           (ite (= i 1) (__f2 initial_1_trace_A) a!3))))
           (a!8 (__f2 (ite (= j 0)
                           (__f1 initial_1_trace_A)
                           (ite (= j 1) (__f2 initial_1_trace_A) a!7)))))
     (let ((a!10 (and (= (__f1 a!4) (__f1 a!8))
                      (not (<= (__f2 a!4) (__f2 a!8))))))
     (let ((a!11 (or (not (<= (__f1 a!4) (__f1 a!8))) a!10)))
       (or (= a!4 a!8) a!9 (and (not a!11) (not (= a!4 a!8))))))))))
     :skolemid _skolem_15
     :qid _forall_13)))
(assert (let ((a!1 (forall ((i Int) (j Int))
             (! (let ((a!1 (ite (= i 8)
                                (__f9 initial_1_trace_A)
                                (ite (= i 9)
                                     (__f10 initial_1_trace_A)
                                     (_tuple_0 NULL (_tuple_1 (- 1) (- 1))))))
                      (a!5 (ite (= j 8)
                                (__f9 initial_2_trace_C)
                                (ite (= j 9)
                                     (__f10 initial_2_trace_C)
                                     (_tuple_0 NULL (_tuple_1 (- 1) (- 1)))))))
                (let ((a!2 (ite (= i 5)
                                (__f6 initial_1_trace_A)
                                (ite (= i 6)
                                     (__f7 initial_1_trace_A)
                                     (ite (= i 7) (__f8 initial_1_trace_A) a!1))))
                      (a!6 (ite (= j 5)
                                (__f6 initial_2_trace_C)
                                (ite (= j 6)
                                     (__f7 initial_2_trace_C)
                                     (ite (= j 7) (__f8 initial_2_trace_C) a!5)))))
                (let ((a!3 (ite (= i 2)
                                (__f3 initial_1_trace_A)
                                (ite (= i 3)
                                     (__f4 initial_1_trace_A)
                                     (ite (= i 4) (__f5 initial_1_trace_A) a!2))))
                      (a!7 (ite (= j 2)
                                (__f3 initial_2_trace_C)
                                (ite (= j 3)
                                     (__f4 initial_2_trace_C)
                                     (ite (= j 4) (__f5 initial_2_trace_C) a!6)))))
                (let ((a!4 (ite (= i 0)
                                (__f1 initial_1_trace_A)
                                (ite (= i 1) (__f2 initial_1_trace_A) a!3)))
                      (a!8 (ite (= j 0)
                                (__f1 initial_2_trace_C)
                                (ite (= j 1) (__f2 initial_2_trace_C) a!7))))
                (let ((a!9 (or (and (= (__f1 a!4) A2) (= (__f1 a!8) B1))
                               (and (= (__f1 a!4) B1) (= (__f1 a!8) C1))
                               (and (= (__f1 a!4) A2) (= (__f1 a!8) C1))))
                      (a!10 (not (<= (__f1 (__f2 a!4)) (__f1 (__f2 a!8)))))
                      (a!11 (not (<= (__f2 (__f2 a!4)) (__f2 (__f2 a!8))))))
                (let ((a!12 (and (= (__f1 (__f2 a!4)) (__f1 (__f2 a!8))) a!11)))
                (let ((a!13 (and (not (or a!10 a!12))
                                 (not (= (__f2 a!4) (__f2 a!8)))
                                 a!9)))
                (let ((a!14 (or (and (= (__f2 a!4) (__f2 a!8)) a!9) a!13)))
                  (or (not (and (>= i 0) (<= i 9) (>= j 0) (<= j 9)))
                      (not (exists ((k Int))
                             (! (let ((a!1 (ite (= i 8)
                                                (__f9 initial_1_trace_A)
                                                (ite (= i 9)
                                                     (__f10 initial_1_trace_A)
                                                     (_tuple_0 NULL
                                                               (_tuple_1 (- 1)
                                                                         (- 1))))))
                                      (a!5 (ite (= k 8)
                                                (__f9 initial_3_trace_B)
                                                (ite (= k 9)
                                                     (__f10 initial_3_trace_B)
                                                     (_tuple_0 NULL
                                                               (_tuple_1 (- 1)
                                                                         (- 1))))))
                                      (a!15 (ite (= j 8)
                                                 (__f9 initial_2_trace_C)
                                                 (ite (= j 9)
                                                      (__f10 initial_2_trace_C)
                                                      (_tuple_0 NULL
                                                                (_tuple_1 (- 1)
                                                                          (- 1)))))))
                                (let ((a!2 (ite (= i 5)
                                                (__f6 initial_1_trace_A)
                                                (ite (= i 6)
                                                     (__f7 initial_1_trace_A)
                                                     (ite (= i 7)
                                                          (__f8 initial_1_trace_A)
                                                          a!1))))
                                      (a!6 (ite (= k 5)
                                                (__f6 initial_3_trace_B)
                                                (ite (= k 6)
                                                     (__f7 initial_3_trace_B)
                                                     (ite (= k 7)
                                                          (__f8 initial_3_trace_B)
                                                          a!5))))
                                      (a!16 (ite (= j 5)
                                                 (__f6 initial_2_trace_C)
                                                 (ite (= j 6)
                                                      (__f7 initial_2_trace_C)
                                                      (ite (= j 7)
                                                           (__f8 initial_2_trace_C)
                                                           a!15)))))
                                (let ((a!3 (ite (= i 2)
                                                (__f3 initial_1_trace_A)
                                                (ite (= i 3)
                                                     (__f4 initial_1_trace_A)
                                                     (ite (= i 4)
                                                          (__f5 initial_1_trace_A)
                                                          a!2))))
                                      (a!7 (ite (= k 2)
                                                (__f3 initial_3_trace_B)
                                                (ite (= k 3)
                                                     (__f4 initial_3_trace_B)
                                                     (ite (= k 4)
                                                          (__f5 initial_3_trace_B)
                                                          a!6))))
                                      (a!17 (ite (= j 2)
                                                 (__f3 initial_2_trace_C)
                                                 (ite (= j 3)
                                                      (__f4 initial_2_trace_C)
                                                      (ite (= j 4)
                                                           (__f5 initial_2_trace_C)
                                                           a!16)))))
                                (let ((a!4 (ite (= i 0)
                                                (__f1 initial_1_trace_A)
                                                (ite (= i 1)
                                                     (__f2 initial_1_trace_A)
                                                     a!3)))
                                      (a!8 (ite (= k 0)
                                                (__f1 initial_3_trace_B)
                                                (ite (= k 1)
                                                     (__f2 initial_3_trace_B)
                                                     a!7)))
                                      (a!18 (ite (= j 0)
                                                 (__f1 initial_2_trace_C)
                                                 (ite (= j 1)
                                                      (__f2 initial_2_trace_C)
                                                      a!17))))
                                (let ((a!9 (or (and (= (__f1 a!4) A2)
                                                    (= (__f1 a!8) B1))
                                               (and (= (__f1 a!4) B1)
                                                    (= (__f1 a!8) C1))
                                               (and (= (__f1 a!4) A2)
                                                    (= (__f1 a!8) C1))))
                                      (a!10 (not (<= (__f1 (__f2 a!4))
                                                     (__f1 (__f2 a!8)))))
                                      (a!11 (not (<= (__f2 (__f2 a!4))
                                                     (__f2 (__f2 a!8)))))
                                      (a!19 (or (and (= (__f1 a!8) A2)
                                                     (= (__f1 a!18) B1))
                                                (and (= (__f1 a!8) B1)
                                                     (= (__f1 a!18) C1))
                                                (and (= (__f1 a!8) A2)
                                                     (= (__f1 a!18) C1))))
                                      (a!20 (not (<= (__f1 (__f2 a!8))
                                                     (__f1 (__f2 a!18)))))
                                      (a!21 (not (<= (__f2 (__f2 a!8))
                                                     (__f2 (__f2 a!18))))))
                                (let ((a!12 (and (= (__f1 (__f2 a!4))
                                                    (__f1 (__f2 a!8)))
                                                 a!11))
                                      (a!22 (and (= (__f1 (__f2 a!8))
                                                    (__f1 (__f2 a!18)))
                                                 a!21)))
                                (let ((a!13 (and (not (or a!10 a!12))
                                                 (not (= (__f2 a!4) (__f2 a!8)))
                                                 a!9))
                                      (a!23 (and (not (or a!20 a!22))
                                                 (not (= (__f2 a!8) (__f2 a!18)))
                                                 a!19)))
                                (let ((a!14 (or (and (= (__f2 a!4) (__f2 a!8))
                                                     a!9)
                                                a!13))
                                      (a!24 (or (and (= (__f2 a!8) (__f2 a!18))
                                                     a!19)
                                                a!23)))
                                  (and a!14 a!24)))))))))
                                :skolemid _skolem_16
                                :qid _exists_2)))
                      (not a!14))))))))))
                :skolemid _skolem_17
                :qid _forall_14))))
  (not a!1)))


(check-sat)
(get-info :all-statistics)
(get-model)
