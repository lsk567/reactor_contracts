module app {

    type rxn_id_t = enum { NULL, A2, B1, C1 };
    type reactor_id_t = enum { A, B, C };

    // Reaction precedence relation
    define rxn_precede(r1, r2 : rxn_id_t) : boolean
    = (r1 == A2 && r2 == B1)
        || (r1 == B1 && r2 == C1)
        || (r1 == A2 && r2 == C1);

    define rxn_has_edge(r1, r2 : rxn_id_t) : boolean
    = (r1 == A2 && r2 == B1)
        || (r1 == B1 && r2 == C1);

    // Reachability relation derived from topology graph
    define rxn_reach(r1, r2 : rxn_id_t) : boolean
    = (r1 == A2 && r2 == B1)
        || (r1 == B1 && r2 == C1)
        || (r1 == A2 && r2 == C1);

    // Logical delays
    define rxn_delay(r1, r2 : rxn_id_t) : integer
    = if (r1 == r2) then 0 else (
        if (r1 == A2 && r2 == B1) then 0 else (
            if (r1 == B1 && r2 == C1) then 0 else -1));
}
