(declare-datatypes ((_enum_1 0)) (((INF) (SEC) (MSEC))))
(declare-datatypes ((_tuple_2 0)) (((_tuple_2 (__f1 Int) (__f2 _enum_1)))))
(declare-datatypes ((_tuple_1 0)) (((_tuple_1 (__f1 _tuple_2) (__f2 Int)))))
(declare-datatypes ((_tuple_7 0)) (((_tuple_7 (__f1 Bool) (__f2 _tuple_1)))))
(declare-datatypes ((_tuple_6 0)) (((_tuple_6 (__f1 _tuple_7) (__f2 _tuple_7) (__f3 _tuple_7) (__f4 _tuple_7) (__f5 _tuple_7) (__f6 _tuple_7) (__f7 _tuple_7) (__f8 _tuple_7) (__f9 _tuple_7) (__f10 _tuple_7)))))
(declare-datatypes ((_enum_0 0)) (((NACT) (STARTUP))))
(declare-datatypes ((_tuple_0 0)) (((_tuple_0 (__f1 _enum_0) (__f2 _tuple_1)))))
(declare-datatypes ((_enum_2 0)) (((NULL) (A1) (B1) (C1))))
(declare-datatypes ((_tuple_3 0)) (((_tuple_3 (__f1 _tuple_0) (__f2 _tuple_0) (__f3 _tuple_0) (__f4 _tuple_0) (__f5 _tuple_0) (__f6 _tuple_0) (__f7 _tuple_0) (__f8 _tuple_0) (__f9 _tuple_0) (__f10 _tuple_0)))))
(declare-datatypes ((_tuple_4 0)) (((_tuple_4 (__f1 _enum_2) (__f2 _tuple_1)))))
(declare-datatypes ((_tuple_5 0)) (((_tuple_5 (__f1 _tuple_4) (__f2 _tuple_4) (__f3 _tuple_4) (__f4 _tuple_4) (__f5 _tuple_4) (__f6 _tuple_4) (__f7 _tuple_4) (__f8 _tuple_4) (__f9 _tuple_4) (__f10 _tuple_4)))))
(declare-fun initial_3_trace_A_out () _tuple_6)
(declare-fun initial_1_trace_A1 () _tuple_5)
(declare-fun initial_2_trace_startup () _tuple_3)
(assert (let ((a!1 (forall ((v _tuple_0))
             (! (let ((a!1 (exists ((j Int))
                             (! (let ((a!1 (ite (= j 9)
                                                (__f10 initial_2_trace_startup)
                                                (_tuple_0 NACT
                                                          (_tuple_1 (_tuple_2 0
                                                                              INF)
                                                                    0)))))
                                (let ((a!2 (ite (= j 6)
                                                (__f7 initial_2_trace_startup)
                                                (ite (= j 7)
                                                     (__f8 initial_2_trace_startup)
                                                     (ite (= j 8)
                                                          (__f9 initial_2_trace_startup)
                                                          a!1)))))
                                (let ((a!3 (ite (= j 3)
                                                (__f4 initial_2_trace_startup)
                                                (ite (= j 4)
                                                     (__f5 initial_2_trace_startup)
                                                     (ite (= j 5)
                                                          (__f6 initial_2_trace_startup)
                                                          a!2)))))
                                (let ((a!4 (ite (= j 0)
                                                (__f1 initial_2_trace_startup)
                                                (ite (= j 1)
                                                     (__f2 initial_2_trace_startup)
                                                     (ite (= j 2)
                                                          (__f3 initial_2_trace_startup)
                                                          a!3)))))
                                  (and (>= j 0) (<= j 9) (= a!4 v))))))
                                :skolemid _skolem_1
                                :qid _exists_1)))
                      (a!2 (exists ((u _tuple_0))
                             (! (let ((a!1 (exists ((j Int))
                                             (! (let ((a!1 (ite (= j 9)
                                                                (__f10 initial_2_trace_startup)
                                                                (_tuple_0 NACT
                                                                          (_tuple_1 (_tuple_2 0
                                                                                              INF)
                                                                                    0)))))
                                                (let ((a!2 (ite (= j 6)
                                                                (__f7 initial_2_trace_startup)
                                                                (ite (= j 7)
                                                                     (__f8 initial_2_trace_startup)
                                                                     (ite (= j
                                                                             8)
                                                                          (__f9 initial_2_trace_startup)
                                                                          a!1)))))
                                                (let ((a!3 (ite (= j 3)
                                                                (__f4 initial_2_trace_startup)
                                                                (ite (= j 4)
                                                                     (__f5 initial_2_trace_startup)
                                                                     (ite (= j
                                                                             5)
                                                                          (__f6 initial_2_trace_startup)
                                                                          a!2)))))
                                                (let ((a!4 (ite (= j 0)
                                                                (__f1 initial_2_trace_startup)
                                                                (ite (= j 1)
                                                                     (__f2 initial_2_trace_startup)
                                                                     (ite (= j
                                                                             2)
                                                                          (__f3 initial_2_trace_startup)
                                                                          a!3)))))
                                                  (and (>= j 0)
                                                       (<= j 9)
                                                       (= a!4 u))))))
                                                :skolemid _skolem_1
                                                :qid _exists_1)))
                                      (a!2 (= (__f2 (__f1 (__f2 u))) SEC))
                                      (a!3 (* 1000 (__f1 (__f1 (__f2 u)))))
                                      (a!5 (= (__f2 (__f1 (__f2 v))) SEC))
                                      (a!6 (* 1000 (__f1 (__f1 (__f2 v)))))
                                      (a!8 (not (<= (__f2 (__f2 u))
                                                    (__f2 (__f2 v)))))
                                      (a!9 (= (__f2 (__f1 (__f2 u))) INF))
                                      (a!10 (= (__f2 (__f1 (__f2 v))) INF)))
                                (let ((a!4 (__f1 (ite a!2
                                                      (_tuple_2 a!3 MSEC)
                                                      (__f1 (__f2 u)))))
                                      (a!7 (__f1 (ite a!5
                                                      (_tuple_2 a!6 MSEC)
                                                      (__f1 (__f2 v)))))
                                      (a!12 (= (ite a!2
                                                    (_tuple_2 a!3 MSEC)
                                                    (__f1 (__f2 u)))
                                               (ite a!5
                                                    (_tuple_2 a!6 MSEC)
                                                    (__f1 (__f2 v))))))
                                (let ((a!11 (not (or (not (<= a!4 a!7))
                                                     (and (= a!4 a!7) a!8)
                                                     (and (not a!9) a!10))))
                                      (a!13 (and a!12
                                                 (= (__f2 (__f2 u))
                                                    (__f2 (__f2 v))))))
                                  (and a!1 a!11 (not (or (and a!9 a!10) a!13))))))
                                :skolemid _skolem_2
                                :qid _exists_2)))
                      (a!3 (and (= (__f1 v) STARTUP)
                                (= (__f2 v) (_tuple_1 (_tuple_2 0 MSEC) 0)))))
                  (or (not a!1) (= (not a!2) a!3)))
                :skolemid _skolem_3
                :qid _forall_0)))
      (a!3 (exists ((x _tuple_7))
             (! (let ((a!1 (= (__f2 (__f1 (__f2 x))) INF))
                      (a!2 (= (__f2 (__f1 (__f2 x))) SEC))
                      (a!3 (* 1000 (__f1 (__f1 (__f2 x)))))
                      (a!5 (not (<= 0 (__f2 (__f2 x))))))
                (let ((a!4 (__f1 (ite a!2 (_tuple_2 a!3 MSEC) (__f1 (__f2 x)))))
                      (a!7 (= (_tuple_2 0 MSEC)
                              (ite a!2 (_tuple_2 a!3 MSEC) (__f1 (__f2 x))))))
                (let ((a!6 (not (or a!1 (and (= 0 a!4) a!5) (not (<= 0 a!4)))))
                      (a!8 (and a!7 (= 0 (__f2 (__f2 x))))))
                  (and (exists ((j Int))
                         (! (let ((a!1 (ite (= j 9)
                                            (__f10 initial_3_trace_A_out)
                                            (_tuple_7 false
                                                      (_tuple_1 (_tuple_2 0 INF)
                                                                0)))))
                            (let ((a!2 (ite (= j 6)
                                            (__f7 initial_3_trace_A_out)
                                            (ite (= j 7)
                                                 (__f8 initial_3_trace_A_out)
                                                 (ite (= j 8)
                                                      (__f9 initial_3_trace_A_out)
                                                      a!1)))))
                            (let ((a!3 (ite (= j 3)
                                            (__f4 initial_3_trace_A_out)
                                            (ite (= j 4)
                                                 (__f5 initial_3_trace_A_out)
                                                 (ite (= j 5)
                                                      (__f6 initial_3_trace_A_out)
                                                      a!2)))))
                            (let ((a!4 (ite (= j 0)
                                            (__f1 initial_3_trace_A_out)
                                            (ite (= j 1)
                                                 (__f2 initial_3_trace_A_out)
                                                 (ite (= j 2)
                                                      (__f3 initial_3_trace_A_out)
                                                      a!3)))))
                              (and (>= j 0) (<= j 9) (= a!4 x))))))
                            :skolemid _skolem_8
                            :qid _exists_6))
                       a!6
                       (not a!8)
                       (__f1 x)))))
                :skolemid _skolem_9
                :qid _exists_7))))
(let ((a!2 (and a!1
                (forall ((u _tuple_0))
                  (! (let ((a!1 (exists ((j Int))
                                  (! (let ((a!1 (ite (= j 9)
                                                     (__f10 initial_2_trace_startup)
                                                     (_tuple_0 NACT
                                                               (_tuple_1 (_tuple_2 0
                                                                                   INF)
                                                                         0)))))
                                     (let ((a!2 (ite (= j 6)
                                                     (__f7 initial_2_trace_startup)
                                                     (ite (= j 7)
                                                          (__f8 initial_2_trace_startup)
                                                          (ite (= j 8)
                                                               (__f9 initial_2_trace_startup)
                                                               a!1)))))
                                     (let ((a!3 (ite (= j 3)
                                                     (__f4 initial_2_trace_startup)
                                                     (ite (= j 4)
                                                          (__f5 initial_2_trace_startup)
                                                          (ite (= j 5)
                                                               (__f6 initial_2_trace_startup)
                                                               a!2)))))
                                     (let ((a!4 (ite (= j 0)
                                                     (__f1 initial_2_trace_startup)
                                                     (ite (= j 1)
                                                          (__f2 initial_2_trace_startup)
                                                          (ite (= j 2)
                                                               (__f3 initial_2_trace_startup)
                                                               a!3)))))
                                       (and (>= j 0) (<= j 9) (= a!4 u))))))
                                     :skolemid _skolem_1
                                     :qid _exists_1)))
                           (a!2 (and (= (__f1 u) STARTUP)
                                     (= (__f2 u) (_tuple_1 (_tuple_2 0 MSEC) 0))))
                           (a!3 (exists ((v _tuple_4))
                                  (! (let ((a!1 (= (__f2 (__f1 (__f2 u))) SEC))
                                           (a!2 (* 1000 (__f1 (__f1 (__f2 u)))))
                                           (a!4 (= (__f2 (__f1 (__f2 v))) SEC))
                                           (a!5 (* 1000 (__f1 (__f1 (__f2 v)))))
                                           (a!7 (not (<= (__f2 (__f2 u))
                                                         (__f2 (__f2 v)))))
                                           (a!8 (= (__f2 (__f1 (__f2 u))) INF))
                                           (a!9 (= (__f2 (__f1 (__f2 v))) INF))
                                           (a!13 (exists ((j Int))
                                                   (! (let ((a!1 (ite (= j 9)
                                                                      (__f10 initial_3_trace_A_out)
                                                                      (_tuple_7 false
                                                                                (_tuple_1 (_tuple_2 0
                                                                                                    INF)
                                                                                          0)))))
                                                      (let ((a!2 (ite (= j 6)
                                                                      (__f7 initial_3_trace_A_out)
                                                                      (ite (= j
                                                                              7)
                                                                           (__f8 initial_3_trace_A_out)
                                                                           (ite (= j
                                                                                   8)
                                                                                (__f9 initial_3_trace_A_out)
                                                                                a!1)))))
                                                      (let ((a!3 (ite (= j 3)
                                                                      (__f4 initial_3_trace_A_out)
                                                                      (ite (= j
                                                                              4)
                                                                           (__f5 initial_3_trace_A_out)
                                                                           (ite (= j
                                                                                   5)
                                                                                (__f6 initial_3_trace_A_out)
                                                                                a!2)))))
                                                      (let ((a!4 (ite (= j 0)
                                                                      (__f1 initial_3_trace_A_out)
                                                                      (ite (= j
                                                                              1)
                                                                           (__f2 initial_3_trace_A_out)
                                                                           (ite (= j
                                                                                   2)
                                                                                (__f3 initial_3_trace_A_out)
                                                                                a!3)))))
                                                        (and (>= j 0)
                                                             (<= j 9)
                                                             (= a!4
                                                                (_tuple_7 true
                                                                          (__f2 v))))))))
                                                      :skolemid _skolem_5
                                                      :qid _exists_4))))
                                     (let ((a!3 (__f1 (ite a!1
                                                           (_tuple_2 a!2 MSEC)
                                                           (__f1 (__f2 u)))))
                                           (a!6 (__f1 (ite a!4
                                                           (_tuple_2 a!5 MSEC)
                                                           (__f1 (__f2 v)))))
                                           (a!11 (= (ite a!1
                                                         (_tuple_2 a!2 MSEC)
                                                         (__f1 (__f2 u)))
                                                    (ite a!4
                                                         (_tuple_2 a!5 MSEC)
                                                         (__f1 (__f2 v)))))
                                           (a!14 (or (not (= (__f1 v) A1)) a!13)))
                                     (let ((a!10 (not (or (not (<= a!3 a!6))
                                                          (and (= a!3 a!6) a!7)
                                                          (and (not a!8) a!9))))
                                           (a!12 (and a!11
                                                      (= (__f2 (__f2 u))
                                                         (__f2 (__f2 v))))))
                                       (and (exists ((j Int))
                                              (! (let ((a!1 (ite (= j 9)
                                                                 (__f10 initial_1_trace_A1)
                                                                 (_tuple_4 NULL
                                                                           (_tuple_1 (_tuple_2 0
                                                                                               INF)
                                                                                     0)))))
                                                 (let ((a!2 (ite (= j 6)
                                                                 (__f7 initial_1_trace_A1)
                                                                 (ite (= j 7)
                                                                      (__f8 initial_1_trace_A1)
                                                                      (ite (= j
                                                                              8)
                                                                           (__f9 initial_1_trace_A1)
                                                                           a!1)))))
                                                 (let ((a!3 (ite (= j 3)
                                                                 (__f4 initial_1_trace_A1)
                                                                 (ite (= j 4)
                                                                      (__f5 initial_1_trace_A1)
                                                                      (ite (= j
                                                                              5)
                                                                           (__f6 initial_1_trace_A1)
                                                                           a!2)))))
                                                 (let ((a!4 (ite (= j 0)
                                                                 (__f1 initial_1_trace_A1)
                                                                 (ite (= j 1)
                                                                      (__f2 initial_1_trace_A1)
                                                                      (ite (= j
                                                                              2)
                                                                           (__f3 initial_1_trace_A1)
                                                                           a!3)))))
                                                   (and (>= j 0)
                                                        (<= j 9)
                                                        (= a!4 v))))))
                                                 :skolemid _skolem_4
                                                 :qid _exists_3))
                                            a!10
                                            (not (or (and a!8 a!9) a!12))
                                            (= (__f1 v) A1)
                                            a!14))))
                                     :skolemid _skolem_6
                                     :qid _exists_5))))
                       (or (not a!1) (not a!2) a!3))
                     :skolemid _skolem_7
                     :qid _forall_1)))))
  (not (or (not a!2) a!3)))))


(check-sat)
(get-info :all-statistics)
(get-model)
